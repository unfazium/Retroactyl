{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY Jexactyl PANEL - jexactyl.com",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-09-30T02:27:07+00:00",
    "name": "Retroactyl Bedrock",
    "author": "egg@unfazium.cloud",
    "description": "A Multi-Egg server software selector for Minecraft Java Edition including compatibility with both ARM64 and Intel\/AMD based hardware. Select from PowerNukkitX, PocketMine-MP and Vanilla Minecraft.",
    "features": [
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/pterodactyl\/yolks:java_21",
        "Java 17": "ghcr.io\/pterodactyl\/yolks:java_17",
        "Java 16": "ghcr.io\/pterodactyl\/yolks:java_16",
        "Java 11": "ghcr.io\/pterodactyl\/yolks:java_11",
        "Java 8": "ghcr.io\/pterodactyl\/yolks:java_8"
    },
    "file_denylist": [],
    "startup": ".\/startup.sh",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-port\": \"{{server.build.default.port}}\",\r\n            \"server-name\": \"{{server.build.env.SERVERNAME}}\",\r\n            \"gamemode\": \"{{server.build.env.GAMEMODE}}\",\r\n            \"difficulty\": \"{{server.build.env.DIFFICULTY}}\",\r\n            \"allow-cheats\": \"{{server.build.env.CHEATS}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Server started\"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n# Ensure SERVER_SOFTWARE is defined (if it\u2019s empty, set it to Vanilla by default)\r\nSERVER_SOFTWARE=\"${SERVER_SOFTWARE:-Vanilla}\"\r\n\r\n# Helper function for Java installation\r\ninstall_java_21() {\r\n    if ! java -version 2>&1 | grep \"21\" &> \/dev\/null; then\r\n        echo \"Java 21 is not installed. Installing Java 21...\"\r\n        \r\n        # Update the package list\r\n\tapt-get update -y\r\n        # Install OpenJDK 21\r\n        if ! apt-get install -y openjdk-21-jdk; then\r\n            echo \"Java installation failed. Please install Java 21 manually.\"\r\n            exit 1\r\n        fi\r\n    else\r\n        echo \"Java 21 is already installed.\"\r\n    fi\r\n}\r\n\r\n# Main installation section\r\nmkdir -p \/mnt\/server\r\ncd \/mnt\/server || { echo \"Failed to navigate to \/mnt\/server\"; exit 1; }\r\n\r\ncase \"$SERVER_SOFTWARE\" in\r\n\r\n\"PowerNukkitX\")\r\n    echo \"Starting PowerNukkitX installation...\"\r\n    # Install dependencies\r\n    apt-get update && apt-get install -y wget || exit 1\r\n\r\n    # Navigate to server directory\r\n    mkdir -p \/mnt\/server\r\n    cd \/mnt\/server || exit 1\r\n\r\n    # Download PowerNukkitX jar file\r\n    echo \"Downloading PowerNukkitX...\"\r\n    wget https:\/\/github.com\/PowerNukkitX\/PowerNukkitX\/releases\/download\/snapshot\/powernukkitx.jar -O powernukkitx.jar || { echo \"Download failed\"; exit 1; }\r\n\r\n    echo \"PowerNukkitX setup completed successfully.\"\r\n\r\n    # Nukkit startup command\r\n    echo 'java -jar powernukkitx.jar' > startup.sh\r\n    chmod +x startup.sh\r\n    ;;\r\n\r\n\"PocketMineMP\")\r\n    echo \"Starting PocketMine-MP installation...\"\r\n    SERVER_SOFTWARE=\"PocketMineMP\"\r\n\r\n    # Install dependencies\r\n    apt-get update\r\n    apt-get install -y curl wget jq unzip\r\n\r\n    mkdir -p \/mnt\/server\r\n    cd \/mnt\/server || exit 1\r\n\r\n    ARCH=$([[ \"$(uname -m)\" == \"x86_64\" ]] && printf \"x86_64\" || printf \"aarch64\")\r\n\r\n    # Force PM5 (latest stable channel)\r\n    VERSION=\"PM5\"\r\n\r\n    # Always fetch latest PM5 build\r\n    PHP_RELEASE=\"pm5-latest\"\r\n    PHP_TARBALL=\"PHP-8.2-Linux-${ARCH}-PM5.tar.gz\"\r\n\r\n    echo \"Downloading PHP binary for PM5...\"\r\n    curl -L \"https:\/\/github.com\/pmmp\/PHP-Binaries\/releases\/download\/${PHP_RELEASE}\/${PHP_TARBALL}\" \\\r\n        -o php-bin.tar.gz || { echo \"Failed to fetch PHP binaries\"; exit 1; }\r\n\r\n    echo \"Extracting PHP binaries...\"\r\n    tar -xzf php-bin.tar.gz || { echo \"Failed to extract PHP binaries\"; exit 1; }\r\n    rm php-bin.tar.gz\r\n\r\n    # Configure php.ini\r\n    echo \"Configuring php.ini...\"\r\n    EXTENSION_DIR=$(find \"bin\" -name '*debug-zts*' | head -n1)\r\n    if [[ -n \"$EXTENSION_DIR\" ]]; then\r\n        grep -q '^extension_dir' bin\/php7\/bin\/php.ini \\\r\n            && sed -i 's|^extension_dir=.*|extension_dir=\"'\"$EXTENSION_DIR\"'\"|' bin\/php7\/bin\/php.ini \\\r\n            || echo \"extension_dir=\\\"$EXTENSION_DIR\\\"\" >> bin\/php7\/bin\/php.ini\r\n    fi\r\n\r\n    # Download PocketMine-MP PM5 phar\r\n    echo \"Fetching PocketMine-MP (PM5)...\"\r\n    DOWNLOAD_LINK=$(curl -sSL \"https:\/\/update.pmmp.io\/api?channel=stable\" | jq -r '.download_url')\r\n    curl -L \"$DOWNLOAD_LINK\" -o PocketMine-MP.phar\r\n\r\n    # Create default configs\r\n    if [[ ! -f server.properties ]]; then\r\n        curl -L -o server.properties \\\r\n            https:\/\/raw.githubusercontent.com\/parkervcp\/eggs\/master\/game_eggs\/minecraft\/bedrock\/pocketmine_mp\/server.properties\r\n    fi\r\n\r\n    touch banned-ips.txt banned-players.txt ops.txt white-list.txt server.log\r\n    mkdir -p players worlds plugins resource_packs\r\n\r\n    echo \"----------------------------------------\"\r\n    echo \"|   PocketMine-MP Installation Done    |\"\r\n    echo \"----------------------------------------\"\r\n\r\n    # Startup script\r\n    echo '.\/bin\/php7\/bin\/php .\/PocketMine-MP.phar --no-wizard --disable-ansi' > startup.sh\r\n    chmod +x startup.sh\r\n    ;;\r\n\r\n\"Vanilla\")\r\n    echo \"Starting Vanilla Bedrock installation...\"\r\n    SERVER_SOFTWARE=\"Vanilla\"\r\n\r\n    echo \"Fetching the latest Bedrock version from Minecraft Wiki...\"\r\n\r\n    # 1. Fetch the latest RELEASE version from the Minecraft Wiki\r\n    LATEST_VERSION=$(curl -s \"https:\/\/minecraft.wiki\/w\/Bedrock_Dedicated_Server\" | \\\r\n        grep -oP 'Release:.*?>\\K[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+' | \\\r\n        head -n 1)\r\n\r\n    if [ -z \"$LATEST_VERSION\" ]; then\r\n        echo \"Error: Could not retrieve the latest Bedrock version from the wiki.\"\r\n        exit 1\r\n    fi\r\n\r\n    # 2. Construct the final download URL using the specific minecraft.net domain\r\n    DOWNLOAD_URL=\"https:\/\/www.minecraft.net\/bedrockdedicatedserver\/bin-linux\/bedrock-server-$LATEST_VERSION.zip\"\r\n    DOWNLOAD_FILE=\"bedrock-server-$LATEST_VERSION.zip\"\r\n\r\n    echo \"Latest Bedrock version found: $LATEST_VERSION\"\r\n    echo \"Download URL: $DOWNLOAD_URL\"\r\n\r\n    echo \"Cleaning up old server files...\"\r\n    rm -f bedrock-server-*.zip\r\n    rm -rf bedrock_server\r\n\r\n    # Install necessary packages\r\n    apt-get update\r\n    apt-get install -y --no-install-recommends curl unzip\r\n\r\n    echo \"Downloading Minecraft Bedrock server...\"\r\n    # Using curl -L to follow redirects, if the minecraft.net link redirects to azureedge.net\r\n    curl -L -o $DOWNLOAD_FILE -A \"Mozilla\/5.0 (Windows NT 10.0; Win64; x64)\" \\\r\n        -H \"Accept-Language: en\" \\\r\n        -H \"Referer: https:\/\/minecraft.wiki\" \\\r\n        \"$DOWNLOAD_URL\"\r\n\r\n    if [ $? -ne 0 ] || [ ! -f $DOWNLOAD_FILE ]; then\r\n        echo \"Error: Failed to download the server file. Check the constructed URL or DNS resolution.\"\r\n        exit 1\r\n    fi\r\n\r\n    echo \"Unpacking server files...\"\r\n    unzip -o $DOWNLOAD_FILE\r\n\r\n    if [ $? -ne 0 ]; then\r\n        echo \"Error: Failed to unpack the server files.\"\r\n        exit 1\r\n    fi\r\n\r\n    echo \"Cleaning up...\"\r\n    rm -f $DOWNLOAD_FILE\r\n\r\n    chmod +x bedrock_server\r\n\r\n    # Startup command\r\n    echo '.\/bedrock_server' > startup.sh\r\n    chmod +x startup.sh\r\n\r\n    echo \"----------------------------------------\"\r\n    echo \"| Minecraft Bedrock Server Installed!  |\"\r\n    echo \"----------------------------------------\"\r\n    ;;\r\n\r\n*)\r\n    echo \"Unrecognized server software: $SERVER_SOFTWARE. Defaulting to Vanilla latest.\"\r\n    echo \"Starting Vanilla Bedrock installation...\"\r\n    SERVER_SOFTWARE=\"Vanilla\"\r\n\r\n    echo \"Fetching the latest Bedrock version from Minecraft Wiki...\"\r\n\r\n    # 1. Fetch the latest RELEASE version from the Minecraft Wiki\r\n    LATEST_VERSION=$(curl -s \"https:\/\/minecraft.wiki\/w\/Bedrock_Dedicated_Server\" | \\\r\n        grep -oP 'Release:.*?>\\K[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+' | \\\r\n        head -n 1)\r\n\r\n    if [ -z \"$LATEST_VERSION\" ]; then\r\n        echo \"Error: Could not retrieve the latest Bedrock version from the wiki.\"\r\n        exit 1\r\n    fi\r\n\r\n    # 2. Construct the final download URL using the specific minecraft.net domain\r\n    DOWNLOAD_URL=\"https:\/\/www.minecraft.net\/bedrockdedicatedserver\/bin-linux\/bedrock-server-$LATEST_VERSION.zip\"\r\n    DOWNLOAD_FILE=\"bedrock-server-$LATEST_VERSION.zip\"\r\n\r\n    echo \"Latest Bedrock version found: $LATEST_VERSION\"\r\n    echo \"Download URL: $DOWNLOAD_URL\"\r\n\r\n    echo \"Cleaning up old server files...\"\r\n    rm -f bedrock-server-*.zip\r\n    rm -rf bedrock_server\r\n\r\n    # Install necessary packages\r\n    apt-get update\r\n    apt-get install -y --no-install-recommends curl unzip\r\n\r\n    echo \"Downloading Minecraft Bedrock server...\"\r\n    # Using curl -L to follow redirects, if the minecraft.net link redirects to azureedge.net\r\n    curl -L -o $DOWNLOAD_FILE -A \"Mozilla\/5.0 (Windows NT 10.0; Win64; x64)\" \\\r\n        -H \"Accept-Language: en\" \\\r\n        -H \"Referer: https:\/\/minecraft.wiki\" \\\r\n        \"$DOWNLOAD_URL\"\r\n\r\n    if [ $? -ne 0 ] || [ ! -f $DOWNLOAD_FILE ]; then\r\n        echo \"Error: Failed to download the server file. Check the constructed URL or DNS resolution.\"\r\n        exit 1\r\n    fi\r\n\r\n    echo \"Unpacking server files...\"\r\n    unzip -o $DOWNLOAD_FILE\r\n\r\n    if [ $? -ne 0 ]; then\r\n        echo \"Error: Failed to unpack the server files.\"\r\n        exit 1\r\n    fi\r\n\r\n    echo \"Cleaning up...\"\r\n    rm -f $DOWNLOAD_FILE\r\n\r\n    chmod +x bedrock_server\r\n\r\n    # Startup command\r\n    echo '.\/bedrock_server' > startup.sh\r\n    chmod +x startup.sh\r\n\r\n    echo \"----------------------------------------\"\r\n    echo \"| Minecraft Bedrock Server Installed!  |\"\r\n    echo \"----------------------------------------\"\r\n    ;;\r\n\r\nesac\r\n\r\n# Final setup and permissions\r\nchmod +x startup.sh\r\necho \"The installation process has been completed. Please click the Start button to continue.\"",
            "container": "ghcr.io\/pterodactyl\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version",
            "description": "Installs the latest version of Minecraft for your selected server software",
            "env_variable": "MCV",
            "default_value": "Latest",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Software",
            "description": "Write the server software to install: PowerNukkitX, PocketMineMP or Vanilla",
            "env_variable": "SERVER_SOFTWARE",
            "default_value": "Vanilla",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "LD Lib Path",
            "description": "Minecraft Bedrock",
            "env_variable": "LD_LIBRARY_PATH",
            "default_value": ".",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Gamemode",
            "description": "Allowed values: \"survival\", \"creative\", or \"adventure\"",
            "env_variable": "GAMEMODE",
            "default_value": "survival",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:survival,creative,adventure",
            "field_type": "text"
        },
        {
            "name": "Difficulty",
            "description": "Allowed values: \"peaceful\", \"easy\", \"normal\", or \"hard\"",
            "env_variable": "DIFFICULTY",
            "default_value": "easy",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:peaceful,easy,normal,hard",
            "field_type": "text"
        },
        {
            "name": "Allow cheats",
            "description": "Allowed values: \"true\" or \"false\"",
            "env_variable": "CHEATS",
            "default_value": "false",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:true,false",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "The name of the server jarfile to run the Nukkit server",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|regex:\/^([\\w\\d._-]+)(\\.jar)$\/",
            "field_type": "text"
        }
    ]
}
